from openpyxl import load_workbook
from typing import List, Tuple
import random
import logging
from telegram import Update
from telegram.ext import ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

class ExcelManager:
    def __init__(self, file_path: str = "tenderisthenight.xlsx"):
        self.file_path = file_path
        self.wb = load_workbook(filename=self.file_path)
        self.sheet = self.wb.active

    def get_all_pairs(self) -> List[Tuple[str, str, str]]:
        # –ß–∏—Ç–∞–µ–º —Ç—Ä–∏ –∫–æ–ª–æ–Ω–∫–∏: English, IPA, Russian
        rows = list(self.sheet.iter_rows(min_row=2, max_col=3, values_only=True))
        filtered = [
            (eng, ipa or "", rus) for eng, ipa, rus in rows
            if eng and eng.strip() != "" and rus and rus.strip() != ""
        ]
        return filtered

    def get_random_pair(self) -> Tuple[str, str, str]:
        pairs = self.get_all_pairs()
        if not pairs:
            raise ValueError("–§–∞–π–ª –ø—É—Å—Ç –∏–ª–∏ –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –ø—É—Å—Ç—ã–µ!")
        return random.choice(pairs)

    def get_random_words(self, n: int = 10) -> List[str]:
        all_english_words = [row[0] for row in self.get_all_pairs()]
        return random.sample(all_english_words, min(len(all_english_words), n))

    def add_phrase(self, english: str, ipa: str, russian: str):
        self.sheet.append([english, ipa, russian])
        self.wb.save(self.file_path)


# –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
excel_manager = ExcelManager("tenderisthenight.xlsx")

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    logger.info(f"User {user.id} started the bot")

    eng, ipa, rus = excel_manager.get_random_pair()
    context.user_data["current_phrase"] = eng

    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n"
        f"–î–∞–≤–∞–π—Ç–µ –ø–æ—Ç—Ä–µ–Ω–∏—Ä—É–µ–º –≤–∞—à–µ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ:\n\n"
        f"üá¨üáß –¢–µ–∫—Å—Ç: <b>{eng}</b>\n"
        f"üó£ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è: <code>{ipa}</code>\n"
        f"üá∑üá∫ –ü–µ—Ä–µ–≤–æ–¥: <i>{rus}</i>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∞—à–∏–º –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ–º!",
        parse_mode="HTML"
    )

# –ö–æ–º–∞–Ω–¥–∞ /next
async def next_phrase(update: Update, context: ContextTypes.DEFAULT_TYPE):
    eng, ipa, rus = excel_manager.get_random_pair()
    context.user_data["current_phrase"] = eng

    await update.message.reply_text(
        f"üá¨üáß –°–ª–µ–¥—É—é—â–∞—è —Ñ—Ä–∞–∑–∞: <b>{eng}</b>\n"
        f"üó£ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è: <code>{ipa}</code>\n"
        f"üá∑üá∫ –ü–µ—Ä–µ–≤–æ–¥: <i>{rus}</i>",
        parse_mode="HTML"
    )

# –ö–æ–º–∞–Ω–¥–∞ /words
async def words_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    random_words = excel_manager.get_random_words()
    word_list = '\n'.join(f"‚Ä¢ {word}" for word in random_words)
    await update.message.reply_text(
        f"–°–ø–∏—Å–æ–∫ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:\n\n<b>{word_list}</b>",
        parse_mode="HTML"
    )
